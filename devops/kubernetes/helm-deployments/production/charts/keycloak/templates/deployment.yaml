apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: "{{ .Chart.Name }}"
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    provider: "pizzatent"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        provider: "pizzatent"
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "jboss/keycloak-mysql:{{ .Values.keyCloakVersion }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
        - name: KEYCLOAK_LOGLEVEL
          value: {{ .Values.logLevel }}
        - name: KEYCLOAK_USER
          value: {{ .Values.keycloakUser }}
        - name: KEYCLOAK_PASSWORD
          value: {{ .Values.keycloakPass }}
        - name: MYSQL_PORT_3306_TCP_ADDR
          value: {{ .Release.Name }}-mysql
# this is more then a default value, it is the set value of all mysql
# database servers
        - name: MYSQL_PORT_3306_TCP_ADDR
          value: {{ .Values.mysql.databaseUrl | quote }}
        - name: MYSQL_PORT_3306_TCP_PORT
          value: {{ .Values.mysql.databasePort | quote }}
        - name: MYSQL_DATABASE
          value: {{ .Values.mysql.databaseName }}
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-cloudsql-keycloak-user"
              key: username
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-cloudsql-keycloak-user"
              key: password
        ports:
        - name: http
          containerPort: {{ .Values.containerPort }}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 1
      - image: gcr.io/cloudsql-docker/gce-proxy:1.10
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances={{ .Values.cloudsql.projectName }}:{{ .Values.cloudsql.regionName }}:{{ .Values.cloudsql.instanceName }}=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      # [END proxy_container]